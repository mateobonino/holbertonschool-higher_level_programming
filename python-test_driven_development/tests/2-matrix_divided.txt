=============================
The ``2-matrix_divided`` module
=============================
Using ``matrix_divided``

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2))
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

    >>> print(matrix_divided([[9, 8, 7], [6, 5, 4, 3], [2, 1]], 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], "test"))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >> print(matrix_divided([[1, 2, 3], [4, "5", 6], [7, 8, 9]], 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([], 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]]))
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> print(matrix_divided())
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'



