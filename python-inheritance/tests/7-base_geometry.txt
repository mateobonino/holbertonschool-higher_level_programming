>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bgeo = BaseGeometry()

    >>> bgeo("test")
    Traceback (most recent call last):
    TypeError: 'BaseGeometry' object is not callable

    >>> bgeo.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> bgeo.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bgeo.integer_validator("test", -1)
    Traceback (most recent call last):
    ValueError: test must be greater than 0

    >>> bgeo.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bgeo.integer_validator("age")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bgeo.integer_validator("age", 1)

    >>> bgeo.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

    >>> bgeo.integer_validator("age", (4,))
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bgeo.integer_validator("age", [3])
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bgeo.integer_validator("age", True)
    <BLANKLINE>

    >>> bgeo.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bgeo.integer_validator("age", None)
    Traceback (most recent call last):
    TypeError: age must be an integer